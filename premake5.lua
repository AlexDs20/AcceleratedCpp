-- The name of your workspace will be used, for example, to name the Visual Studio .sln file generated by Premake.
workspace "Accelerated"
    -- We set the location of the files Premake will generate
    location "generated"

    -- We indicate that all the projects are C++ only
    language "C++"
    cppdialect "C++11"

    -- We will compile for x86_64. You can change this to x86 for 32 bit builds.
    architecture "x86_64"

    -- Configurations are often used to store some compiler / linker settings together.
    -- The Debug configuration will be used by us while debugging.
    -- The optimized Release configuration will be used when shipping the app.
    configurations { "Debug", "Release" }

    flags
    {
        "FatalWarnings"
    }
    -- We use filters to set options, a new feature of Premake5.
    -- We now only set settings for the Debug configuration
    filter { "configurations:Debug" }
        -- We want debug symbols in our debug config
        symbols "On"

    -- We now only set settings for Release
    filter { "configurations:Release" }
        -- Release should be optimized
        optimize "On"

    filter "system:linux"
        defines{ "_X11" }

    filter "system:windows"
        defines { "_WINDOWS" }

    filter "system:Mac"
        defines { "_MAC" }

    -- Reset the filter for other settings
    filter { }

    -- Here we use some "tokens" (the things between %{ ... }). They will be replaced by Premake
    -- automatically when configuring the projects.
    -- * %{prj.name} will be replaced by "ExampleLib" / "App" / "UnitTests"
    --  * %{cfg.longname} will be replaced by "Debug" or "Release" depending on the configuration
    -- The path is relative to *this* folder
    targetdir ("build/bin/%{prj.name}/%{cfg.longname}")
    objdir ("build/obj/%{prj.name}/%{cfg.longname}")

-- include "projects/00-Getting-Started"
-- include "projects/01-Strings"
-- include "projects/02-Loops"
-- include "projects/03-Data-batches"
-- include "projects/04-Organising-programs"
-- include "projects/04.2-Organising-programs-several-students"
-- include "projects/05-Sequential_containers"
-- include "projects/06-Library-Algo"
-- include "projects/07-Using-associative-containers"
-- include "projects/08-Writing-generic-functions"
-- include "projects/09-Defining-new-types"
-- include "projects/10-Managing-memory"
-- include "projects/11-Defining-abstract-data-types"
include "projects/12-making-class-objects-act-like-values"
